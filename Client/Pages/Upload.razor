@page "/upload"
@using BlazorApp.Shared 
@using System.Net.Http.Headers;
@inject HttpClient Http

<h1>Upload Page</h1>

<p>This component demonstrates todo.</p>

<InputFile OnChange="@UploadFiles" multiple />
@if (errors.Count > 0)
{
    <h2>Errors</h2>
    <ul class="text-danger">
        @foreach(var error in errors)
        {
            <li>@error</li>
        }
    </ul>
}

@code {
    private long maxFileSize = 1024 * 1024 * 1024 * 1; // 1 GB
    private int maxAllowedFiles = 20;
    private List<string> fileNames = new();
    private List<string> errors = new();
    private WeatherForecast[] forecasts = new WeatherForecast[]{};

    protected async Task UploadFiles(InputFileChangeEventArgs e)
    {
        errors.Clear();
        if (e.FileCount > maxAllowedFiles)
        {
            errors.Add($"Too many files selected. Maximum {maxAllowedFiles} files are allowed.");
            return;
        }

        using var content = new MultipartFormDataContent();

        foreach (var file in e.GetMultipleFiles(maxAllowedFiles))
        {
            if (file.Size > maxFileSize)
            {
                errors.Add($"File '{file.Name}' exceeds maximum allowed size of {maxFileSize/(1024 * 1024)} MB.");
                continue;
            }

            var fileContent = new StreamContent(file.OpenReadStream(maxFileSize));
            fileContent.Headers.ContentType = new MediaTypeHeaderValue(file.ContentType);

            fileNames.Add(file.Name);

            content.Add(fileContent, "\"files\"", file.Name);

            var response = await Http.PostAsync("/api/UploadFunction", content);

            if (response.IsSuccessStatusCode)
            {
                string test = "Joepi!";
            }
            //    var response = Http.PostAsJsonAsync<InputFile>("/api/UploadFile", file);

        //    //Prepare the content for the request
        //    var content = new MultipartFormDataContent();
        //    var fileContent = new StreamContent(file.OpenReadStream(maxFileSize));
        //    fileContent.Headers.ContentType = new MediaTypeHeaderValue(file.ContentType);
        //    content.Add(fileContent, "file", file.Name);

        //    var response = await _httpClient.PostAsync("https://vse-td-blobstorage.azurewebsites.net/api/UploadFile", content);
            
        //    var ms = new MemoryStream();
        //    await file.OpenReadStream().CopyToAsync(ms);
        //    var buffer = ms.ToArray();
        //    Console.WriteLine($"File name '{file.Name}', length {buffer.Length} bytes");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("/api/WeatherForecast") ?? new WeatherForecast[]{};
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }
    }
}
